name: tests
on:
  push:
    branches: ['**']
  pull_request:
    branches: ['master']

env:
    USERNAME: bluecap
    REGISTRY: docker.io
    IMAGE_NAME: 'bluecap/minime.java'

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Oracle JDK 20
        uses: oracle-actions/setup-java@v1
        with:
          website: oracle.com
          release: 20

      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots test
        env:
          SPRING_CONFIG_NAME: application-test

  build:
      name: Build and push Docker image
      if: github.event_name != 'pull_request'
      runs-on: ubuntu-latest
      needs: test
      permissions:
          contents: read
          packages: write
          id-token: write

      steps:
          - name: Checkout repository
            uses: actions/checkout@v3

          # Install the cosign tool except on PR
          # https://github.com/sigstore/cosign-installer
          - name: Install cosign
            uses: sigstore/cosign-installer@main
          - name: Check cosign install
            run: cosign version

          - name: Setup Docker buildx
            uses: docker/setup-buildx-action@v2

          # Login against a Docker registry except on PR
          # https://github.com/docker/login-action
          - name: Log into registry ${{ env.REGISTRY }}
            uses: docker/login-action@v2
            with:
                registry: ${{ env.REGISTRY }}
                username: ${{ env.USERNAME }}
                password: ${{ secrets.DOCKER_TOKEN }}

          # Extract metadata (tags, labels) for Docker
          # https://github.com/docker/metadata-action
          - name: Extract Docker metadata
            id: meta
            uses: docker/metadata-action@v4
            with:
                images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

          # Build and push Docker image with Buildx
          # https://github.com/docker/build-push-action
          - name: Build and push Docker image
            id: build-and-push
            uses: docker/build-push-action@v4
            with:
                context: .
                file: ./devops/docker/Dockerfile-backend
                pull: true
                push: true
                tags: ${{ steps.meta.outputs.tags }}
                labels: ${{ steps.meta.outputs.labels }}
                cache-from: type=gha
                cache-to: type=gha,mode=max

          # Sign the resulting Docker image digest except on PRs.
          # This will only write to the public Rekor transparency log when the Docker
          # repository is public to avoid leaking data.  If you would like to publish
          # transparency data even for private images, pass --force to cosign below.
          # https://github.com/sigstore/cosign
          - name: Sign the published Docker image
            env:
                COSIGN_EXPERIMENTAL: 'true'
              # This step uses the identity token to provision an ephemeral certificate
              # against the sigstore community Fulcio instance.
            run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign -y {}@${{ steps.build-and-push.outputs.digest }}
